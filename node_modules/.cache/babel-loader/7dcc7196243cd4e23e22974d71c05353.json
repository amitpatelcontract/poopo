{"ast":null,"code":"var _jsxFileName = \"/Users/josephtoyoshima/retainu/retainu-frontend/retainU/src/App.js\";\nimport React, { PureComponent } from 'react';\nimport { ComposedChart, Line, Area, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, Scatter } from 'recharts';\n\nconst mysql = require('mysql'); // First you need to create a connection to the database\n// Be sure to replace 'user' and 'password' with the correct values\n\n\nconst con = mysql.createConnection({\n  host: '127.0.0.1',\n  user: 'root',\n  password: 'Asdfjkl123!'\n});\n/*\ncon.query('SELECT count(original_transaction_id) FROM last_record WHERE event=\"subscription\"', (err,rows) => {\n  if(err) throw err;\n\n  console.log('Data received from Db:');\n  console.log(rows);\n});*/\n\nconst data = [{\n  name: '9/1',\n  av: 100,\n  lv: -50,\n  pv: 50\n}, {\n  name: '9/8',\n  av: 125,\n  lv: -35,\n  pv: 30\n}, {\n  name: '9/15',\n  av: 97,\n  lv: -22,\n  pv: 40\n}, {\n  name: '9/22',\n  av: 55,\n  lv: -60,\n  pv: 15\n}, {\n  name: '9/29',\n  av: 160,\n  lv: -40,\n  pv: 30\n}, {\n  name: '10/6',\n  av: 170,\n  lv: -30,\n  pv: 20\n}];\nexport default class Example extends PureComponent {\n  render() {\n    return React.createElement(ComposedChart, {\n      width: 500,\n      height: 400,\n      data: data,\n      stackOffset: \"sign\",\n      margin: {\n        top: 20,\n        right: 20,\n        bottom: 20,\n        left: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(CartesianGrid, {\n      stroke: \"#f5f5f5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(XAxis, {\n      dataKey: \"name\",\n      padding: {\n        left: 20,\n        right: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(YAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(Legend, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(Bar, {\n      name: \"adds\",\n      dataKey: \"av\",\n      barSize: 20,\n      stackId: \"a\",\n      fill: \"#00A6CA\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(Bar, {\n      name: \"losses\",\n      dataKey: \"lv\",\n      barSize: 20,\n      stackId: \"a\",\n      fill: \"#b30000\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(Area, {\n      name: \"% active users\",\n      type: \"monotone\",\n      dataKey: \"pv\",\n      fill: \"#82ca9d\",\n      stroke: \"#82ca9d\",\n      fillOpacity: 0.2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/josephtoyoshima/retainu/retainu-frontend/retainU/src/App.js"],"names":["React","PureComponent","ComposedChart","Line","Area","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","Scatter","mysql","require","con","createConnection","host","user","password","data","name","av","lv","pv","Example","render","top","right","bottom","left"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport {\n  ComposedChart, Line, Area, Bar, XAxis, YAxis, CartesianGrid, Tooltip,\n  Legend, Scatter,\n} from 'recharts';\n\nconst mysql = require('mysql');\n\n// First you need to create a connection to the database\n// Be sure to replace 'user' and 'password' with the correct values\nconst con = mysql.createConnection({\n  host: '127.0.0.1',\n  user: 'root',\n  password: 'Asdfjkl123!',\n});\n/*\ncon.query('SELECT count(original_transaction_id) FROM last_record WHERE event=\"subscription\"', (err,rows) => {\n  if(err) throw err;\n\n  console.log('Data received from Db:');\n  console.log(rows);\n});*/\n\n\nconst data = [\n  {\n    name: '9/1', av: 100, lv: -50, pv: 50,\n  },\n  {\n    name: '9/8', av: 125, lv: -35, pv: 30,\n  },\n  {\n    name: '9/15', av: 97, lv: -22, pv: 40,\n  },\n  {\n    name: '9/22', av: 55, lv: -60, pv: 15,\n  },\n  {\n    name: '9/29', av: 160, lv: -40, pv: 30,\n  },\n  {\n    name: '10/6', av: 170, lv: -30, pv: 20,\n  },\n];\n\nexport default class Example extends PureComponent {\n\n  render() {\n    return (\n      <ComposedChart\n        width={500}\n        height={400}\n        data={data}\n        stackOffset=\"sign\"\n        margin={{\n          top: 20, right: 20, bottom: 20, left: 20,\n        }}\n      >\n        <CartesianGrid stroke=\"#f5f5f5\" />\n        <XAxis dataKey=\"name\" padding={{left:20, right:20}}/>\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <Bar name=\"adds\" dataKey=\"av\" barSize={20} stackId=\"a\" fill=\"#00A6CA\" />\n        <Bar name=\"losses\" dataKey=\"lv\" barSize={20} stackId=\"a\" fill=\"#b30000\" />\n        <Area name=\"% active users\" type=\"monotone\" dataKey=\"pv\" fill=\"#82ca9d\" stroke=\"#82ca9d\" fillOpacity={0.2} />\n        {/* <Scatter dataKey=\"cnt\" fill=\"red\" /> */}\n      </ComposedChart>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}